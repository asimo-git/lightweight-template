(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))l(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const n of t.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&l(n)}).observe(document,{childList:!0,subtree:!0});function i(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function l(e){if(e.ep)return;e.ep=!0;const t=i(e);fetch(e.href,t)}})();const s=document.getElementById("scroll-button");window.addEventListener("scroll",()=>{s&&(window.scrollY>200?s.classList.add("show-scroll-button"):s.classList.remove("show-scroll-button"))});s&&s.addEventListener("click",()=>{window.scrollTo({top:0,behavior:"smooth"})});function c(r){r.forEach(o=>{console.log(o.target),o.isIntersecting&&o.target.classList.add("element-show")})}let d=new IntersectionObserver(c,{threshold:[.1],rootMargin:"100px"}),u=document.querySelectorAll(".element-animation");for(let r of u)console.log("obs",r),d.observe(r);
